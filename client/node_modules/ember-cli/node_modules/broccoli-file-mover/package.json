{
  "name": "broccoli-file-mover",
  "version": "0.3.5",
  "description": "Broccoli plugin to move a single file.",
  "main": "index.js",
  "author": {
    "name": "Robert Jackson"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/rjackson/broccoli-file-mover.git"
  },
  "scripts": {
    "test": "mocha tests/"
  },
  "keywords": [
    "broccoli-plugin",
    "javascript"
  ],
  "dependencies": {
    "broccoli-caching-writer": "~0.1.1",
    "broccoli-kitchen-sink-helpers": "~0.2.0",
    "rimraf": "~2.2.6"
  },
  "devDependencies": {
    "mocha": "~1.18.2",
    "broccoli": "~0.9.0",
    "expect.js": "~0.3.1"
  },
  "readme": "# Broccoli's File Mover\n\n[![Build Status](https://travis-ci.org/rjackson/broccoli-file-mover.svg?branch=master)](https://travis-ci.org/rjackson/broccoli-file-mover)\n\n## Installation\n\n```bash\nnpm install --save-dev broccoli-file-mover\n```\n\n## Usage\n\nMoving a single file from `app/main` to `app`:\n\n```javascript\nvar moveFile = require('broccoli-file-mover');\n\nvar tree = moveFile('app', {\n  srcFile: 'app/main.js',\n  destFile: '/app.js'\n});\n```\n\nMoving `app/main` to `app` and `test/main` to `test`:\n\n```javacript\nvar moveFile = require('broccoli-file-mover');\n\nvar tree = moveFile('app', {\n  files: {\n    'app/main.js': 'app.js',\n    'test/main.js': 'test.js'\n  }\n});\n```\n\n## Documentation\n\n### `moveFile(inputTree, options)`\n\n---\n\n`options.srcFile` *{String}*\n\nThe path of the file to move (starting location).\n\n---\n\n`options.destFile` *{String}*\n\nThe path to move the file to (final location).\n\n---\n\n`options.copy` *{true,false}*\n\nShould the file be copied?\n\n - If `copy` is `true`, then the source file is left in the tree (this might be useful to output both a non-minified and minified version).\n - If `copy` is `false`, then the source file is removed after it has been copied (essentially making this a `move` operation).\n\n---\n\n`options.duplicate` *{true,false}*\n\nShould the source full contents of the input tree be duplicated into the returned tree?\n\n - If `true`, then the contents of the input tree is copied over into the new tree.\n - If `false`, then only the files being moved are worked on.\n\n---\n\n`options.files` *{Array|Object}*\n\nThis allows specifying more than one move/copy operation at a time (and reduced the total number of trees/steps\nneeded if you need to move many files).\n\n - If `files` is an object the key is used as the source path, and the value is the destination path.\n - If `files` is an array each item must be an object with a `srcFile` and `destFile` property. If `copy` is present it will\n   be used also.\n\n## ZOMG!!! TESTS?!?!!?\n\nI know, right?\n\nRunning the tests:\n\n```javascript\nnpm install\nnpm test\n```\n\n## License\n\nThis project is distributed under the MIT license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rjackson/broccoli-file-mover/issues"
  },
  "homepage": "https://github.com/rjackson/broccoli-file-mover",
  "_id": "broccoli-file-mover@0.3.5",
  "_from": "broccoli-file-mover@~0.3.5"
}
